apiVersion: apps/v1
kind: Deployment
metadata:
  name: evershop
  labels:
    app: evershop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: evershop
  template:
    metadata:
      labels:
        app: evershop
    spec:
      containers:
        - name: evershop
          image: gcr.io/playground-s-11-7a7554e5/evershop:latest
          ports:
            - containerPort: 3000
          env:
            - name: DB_HOST
              value: "127.0.0.1"  # Cloud SQL Proxy listens on localhost
            - name: DB_PORT
              value: "5432"  # Default PostgreSQL port, change if different
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_PASSWORD
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_USER
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_NAME
            - name: NODE_ENV
              value: development
          resources:
            limits:
              memory: "128Mi"
              cpu: "250m"
            requests:
              memory: "128Mi"
              cpu: "250m"

        # Cloud SQL Proxy sidecar container
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
          command: ["/cloud_sql_proxy",
                    "-instances=playground-s-11-7a7554e5:europe-west1:evershop-postgres=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
          resources:
            limits:
              memory: "128Mi"
              cpu: "250m"
            requests:
              memory: "128Mi"
              cpu: "250m"

      volumes:
        # Volume for Cloud SQL credentials
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials

      imagePullSecrets:
        - name: regcred
